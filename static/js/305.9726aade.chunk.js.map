{"version":3,"file":"static/js/305.9726aade.chunk.js","mappings":"uQAAO,IAAMA,EAAM,mCCSnB,IACA,EADsB,CAAEC,cAPxB,WACE,OAAOC,MAAM,4DAAD,OACkDF,IAC5DG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,GAIYC,EAAa,SAAAC,GACxB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,oBAC+CP,IACzDG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYG,EAAY,SAAAD,GACvB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYI,EAAe,SAAAF,GAC1B,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYK,EAAc,SAAAC,GAEzB,OADAC,QAAQC,IAAIF,GACLT,MAAM,qDAAD,OAC2CF,EAD3C,kBACwDW,IAClER,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,C,+HC1CYS,E,OAAQC,GAAAA,MAAH,8D,SCELC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KAeA,OACE,kBAAMF,SAVa,SAAAG,GACnBA,EAAEC,iBACoB,KAAlBV,EAAOW,SAGXL,EAASN,GACTQ,EAAU,IACX,EAGC,WACE,SAACL,EAAD,CACES,YAAY,SACZC,KAAK,OACLC,KAAK,OACLC,MAAM,yIACNC,UAAQ,EACRC,MAAOjB,EACPkB,SAtBe,SAAAT,GACnBD,EAAUC,EAAEU,OAAOF,MACpB,KAsBG,mBAAQJ,KAAK,SAAb,sBAGL,ECcD,EA1Ce,WAAO,IAAD,EACnB,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACHF,IAGL5B,EAAAA,EAAAA,IAAY4B,GAAOnC,MAAK,YAAkB,IAAfsC,EAAc,EAAdA,QACzBT,EAAUS,EACX,GAEF,GAAE,CAACH,IAOJ,OACE,4BACE,SAACtB,EAAD,CAAaC,SAPE,SAAAN,GACjBwB,EAAgB,CAAEG,MAAO3B,IACzBqB,EAAU,GACX,KAKG,0BACGD,EAAOW,OAAS,GACfX,EAAOY,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC5B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMZ,GAA1C,SACGQ,KAFIC,EAMZ,KACH,SAAC,EAAAI,SAAD,WACE,SAAC,KAAD,WAKT,C","sources":["constants/credential.js","api/Requests.js","components/SearchMovies/SearchMoviesStyled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["export const KEY = 'a80320dfafec72dcbb6280cf373b1a2a';\n","import { KEY } from '../constants/credential';\n\nfunction fetchDataWeek() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\nconst apiWeekMovies = { fetchDataWeek };\nexport default apiWeekMovies;\n\nexport const fetchMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const castMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const reviewsMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const searchMovie = search => {\n  console.log(search);\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`\n  ).then(response => {\n    return response.json();\n  });\n};\n","import styled from 'styled-components';\nexport const Input = styled.input`\n  width: 300px;\n  margin-top: 10px;\n`;\n","import { useState } from 'react';\nimport { Input } from './SearchMoviesStyled';\n\nexport const SearchMovie = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (search.trim() === '') {\n      return;\n    }\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Batman\"\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={search}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { searchMovie } from 'api/Requests';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchMovie } from '../../components/SearchMovies/SearchMovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    searchMovie(query).then(({ results }) => {\n      setMovies(results);\n    });\n    return;\n  }, [query]);\n\n  const formSubmit = search => {\n    setSearchParams({ query: search });\n    setMovies([]);\n  };\n\n  return (\n    <div>\n      <SearchMovie onSubmit={formSubmit} />\n      <ul>\n        {movies.length > 0 &&\n          movies.map(({ original_title, id }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {original_title}\n                </Link>\n              </li>\n            );\n          })}\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </ul>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["KEY","fetchDataWeek","fetch","then","response","json","fetchMovie","movieId","castMovie","reviewsMovie","searchMovie","search","console","log","Input","styled","SearchMovie","onSubmit","useState","setSearch","e","preventDefault","trim","placeholder","type","name","title","required","value","onChange","target","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","results","length","map","original_title","id","to","state","from","Suspense"],"sourceRoot":""}