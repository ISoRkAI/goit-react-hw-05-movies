{"version":3,"file":"static/js/664.79e63d44.chunk.js","mappings":"uQAAO,IAAMA,EAAM,mCCSnB,IACA,EADsB,CAAEC,cAPxB,WACE,OAAOC,MAAM,4DAAD,OACkDF,IAC5DG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,GAIYC,EAAa,SAAAC,GACxB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,oBAC+CP,IACzDG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYG,EAAY,SAAAD,GACvB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYI,EAAe,SAAAF,GAC1B,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYK,EAAc,SAAAC,GAEzB,OADAC,QAAQC,IAAIF,GACLT,MAAM,qDAAD,OAC2CF,EAD3C,kBACwDW,IAClER,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,C,kJCzCYS,EAAYC,EAAAA,GAAAA,IAAH,gI,SCCTC,EAAiB,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QACzBU,EAAU,CACd,CAAEC,KAAK,WAAD,OAAaX,EAAb,SAA6BY,KAAM,QACzC,CAAED,KAAK,WAAD,OAAaX,EAAb,YAAgCY,KAAM,YAG9C,OACE,UAACL,EAAD,YACE,mDACA,wBACGG,EAAQG,KAAI,gBAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,yBACE,SAAC,KAAD,CAASE,GAAIH,EAAb,SAAoBC,KADbA,EADE,QAQpB,ECnBYG,EAAMP,EAAAA,GAAAA,IAAH,6EAKHD,EAAYC,EAAAA,GAAAA,IAAH,0CAGTQ,EAAgBR,EAAAA,GAAAA,IAAH,yCAGbS,EAAYT,EAAAA,GAAAA,GAAH,yFAMTU,EAAYV,EAAAA,GAAAA,GAAH,6CCgDtB,EAvDqB,WAAO,IAAD,IACjBR,GAAYmB,EAAAA,EAAAA,MAAZnB,QACR,GAA0BoB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBD,YAAnB,QAA2B,KAErCE,EAAAA,EAAAA,YAAU,YACR9B,EAAAA,EAAAA,IAAWC,GAASJ,MAAK,SAAAkC,GACvBR,EAASQ,EACV,GACF,GAAE,CAAC9B,IAMJ,GAAKqB,EAIL,OACE,4BACE,mBAAQU,KAAK,SAASC,QAVX,WACbP,EAASE,EACV,EAQG,sBAGA,UAAC,EAAD,YACE,SAACZ,EAAD,CACEkB,IAAG,0CAAqCZ,EAAMa,aAC9CC,IAAI,MAEN,UAACnB,EAAD,YACE,0BACGK,EAAMe,eADT,KAC2Bf,EAAMgB,aAAaC,MAAM,EAAG,GADvD,QAGA,wCAAgBC,OAAOC,SAA8B,GAArBnB,EAAMoB,cAAtC,SACA,sCACA,uBAAIpB,EAAMqB,YACV,oCACA,SAACzB,EAAD,UACGI,EAAMsB,OAAO9B,KAAI,gBAAG+B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,SAAC3B,EAAD,UAAqB2B,GAALD,EADA,aAMxB,4BACE,SAACnC,EAAD,CAAgBT,QAASA,KACzB,SAAC,EAAA8C,SAAD,WACE,SAAC,KAAD,WAKT,C","sources":["constants/credential.js","api/Requests.js","components/CastAndReviews/CastAndReviewsStyled.js","components/CastAndReviews/CastAndReviews.jsx","pages/MovieDetails/MovieDetailsStyled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const KEY = 'a80320dfafec72dcbb6280cf373b1a2a';\n","import { KEY } from '../constants/credential';\n\nfunction fetchDataWeek() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\nconst apiWeekMovies = { fetchDataWeek };\nexport default apiWeekMovies;\n\nexport const fetchMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const castMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const reviewsMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const searchMovie = search => {\n  console.log(search);\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`\n  ).then(response => {\n    return response.json();\n  });\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border-top: solid 0.5px;\n  border-bottom: solid 0.5px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { Container } from './CastAndReviewsStyled';\n\nexport const CastAndReviews = ({ movieId }) => {\n  const navItem = [\n    { href: `/movies/${movieId}/cast`, text: 'Cast' },\n    { href: `/movies/${movieId}/reviews`, text: 'Reviews' },\n  ];\n\n  return (\n    <Container>\n      <p>Additional information</p>\n      <ul>\n        {navItem.map(({ href, text }) => (\n          <li key={text}>\n            <NavLink to={href}>{text}</NavLink>\n          </li>\n        ))}\n      </ul>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  display: block;\n  width: 250px;\n  height: 100%;\n`;\nexport const Container = styled.div`\n  display: flex;\n`;\nexport const ContainerInfo = styled.div`\n  margin: 10px;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin: 0px;\n  padding: 0px;\n`;\nexport const GenreItem = styled.li`\n  list-style: none;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'api/Requests';\nimport { CastAndReviews } from 'components/CastAndReviews/CastAndReviews';\nimport {\n  Container,\n  ContainerInfo,\n  GenreItem,\n  GenreList,\n  Img,\n} from './MovieDetailsStyled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const from = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovie(movieId).then(results => {\n      setMovie(results);\n    });\n  }, [movieId]);\n\n  const goBack = () => {\n    navigate(from);\n  };\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <div>\n      <button type=\"button\" onClick={goBack}>\n        Go back\n      </button>\n      <Container>\n        <Img\n          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt=\"\"\n        />\n        <ContainerInfo>\n          <h1>\n            {movie.original_title} ({movie.release_date.slice(0, 4)})\n          </h1>\n          <p>User Score: {Number.parseInt(movie.vote_average * 10)} %</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <GenreList>\n            {movie.genres.map(({ id, name }) => (\n              <GenreItem key={id}>{name}</GenreItem>\n            ))}\n          </GenreList>\n        </ContainerInfo>\n      </Container>\n      <div>\n        <CastAndReviews movieId={movieId} />\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","fetchDataWeek","fetch","then","response","json","fetchMovie","movieId","castMovie","reviewsMovie","searchMovie","search","console","log","Container","styled","CastAndReviews","navItem","href","text","map","to","Img","ContainerInfo","GenreList","GenreItem","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","from","state","useEffect","results","type","onClick","src","poster_path","alt","original_title","release_date","slice","Number","parseInt","vote_average","overview","genres","id","name","Suspense"],"sourceRoot":""}