{"version":3,"file":"static/js/723.34c5fb69.chunk.js","mappings":"uQAAO,IAAMA,EAAM,mCCSnB,IACA,EADsB,CAAEC,cAPxB,WACE,OAAOC,MAAM,4DAAD,OACkDF,IAC5DG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,GAIYC,EAAa,SAAAC,GACxB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,oBAC+CP,IACzDG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYG,EAAY,SAAAD,GACvB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYI,EAAe,SAAAF,GAC1B,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYK,EAAc,SAAAC,GAEzB,OADAC,QAAQC,IAAIF,GACLT,MAAM,qDAAD,OAC2CF,EAD3C,kBACwDW,IAClER,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,C,+HCzCYS,E,OAAMC,GAAAA,IAAH,yC,SCuChB,EAnCa,WACX,IAAQR,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,IANAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAUD,GAASJ,MAAK,YAAe,IAAZkB,EAAW,EAAXA,KACzBF,EAASE,EACV,GACF,GAAE,CAACd,IAECW,EAIL,OACE,+BACE,wBACGA,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,GAA3C,OACT,2BACE,SAACZ,EAAD,CACEa,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAI,MAEN,uBAAIN,KACJ,uCAAeE,OAVRC,EADA,OAiBlB,C","sources":["constants/credential.js","api/Requests.js","components/Cast/CastStyled.js","components/Cast/Cast.jsx"],"sourcesContent":["export const KEY = 'a80320dfafec72dcbb6280cf373b1a2a';\n","import { KEY } from '../constants/credential';\n\nfunction fetchDataWeek() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\nconst apiWeekMovies = { fetchDataWeek };\nexport default apiWeekMovies;\n\nexport const fetchMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const castMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const reviewsMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const searchMovie = search => {\n  console.log(search);\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`\n  ).then(response => {\n    return response.json();\n  });\n};\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 100px;\n`;\n","import { castMovie } from 'api/Requests';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport placeholder from '../../images/placeholder.png';\nimport { Img } from './CastStyled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    castMovie(movieId).then(({ cast }) => {\n      setMovie(cast);\n    });\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <ul>\n        {movie.map(({ original_name, profile_path, character, id }) => (\n          <li key={id}>\n            <Img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : placeholder\n              }\n              alt=\"\"\n            />\n            <p>{original_name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n"],"names":["KEY","fetchDataWeek","fetch","then","response","json","fetchMovie","movieId","castMovie","reviewsMovie","searchMovie","search","console","log","Img","styled","useParams","useState","movie","setMovie","useEffect","cast","map","original_name","profile_path","character","id","src","placeholder","alt"],"sourceRoot":""}