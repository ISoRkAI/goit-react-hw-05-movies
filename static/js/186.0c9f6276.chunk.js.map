{"version":3,"file":"static/js/186.0c9f6276.chunk.js","mappings":"uQAAO,IAAMA,EAAM,mCCSnB,IACA,EADsB,CAAEC,cAPxB,WACE,OAAOC,MAAM,4DAAD,OACkDF,IAC5DG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,GAIYC,EAAa,SAAAC,GACxB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,oBAC+CP,IACzDG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYG,EAAY,SAAAD,GACvB,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYI,EAAe,SAAAF,GAC1B,OAAOL,MAAM,sCAAD,OAC4BK,EAD5B,4BACuDP,IACjEG,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,EAEYK,EAAc,SAAAC,GAEzB,OADAC,QAAQC,IAAIF,GACLT,MAAM,qDAAD,OAC2CF,EAD3C,kBACwDW,IAClER,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,GACF,C,8ECRD,UA/BgB,WACd,IAAQE,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA0BQ,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,IANAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAaF,GAASJ,MAAK,YAAkB,IAAfgB,EAAc,EAAdA,QAC5BF,EAASE,EACV,GACF,GAAE,CAACZ,IAECS,EAIL,OACE,+BACE,wBACGA,EACCA,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACR,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EADD,KAOV,uEAKT,C","sources":["constants/credential.js","api/Requests.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const KEY = 'a80320dfafec72dcbb6280cf373b1a2a';\n","import { KEY } from '../constants/credential';\n\nfunction fetchDataWeek() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n}\nconst apiWeekMovies = { fetchDataWeek };\nexport default apiWeekMovies;\n\nexport const fetchMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const castMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const reviewsMovie = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}`\n  ).then(response => {\n    return response.json();\n  });\n};\n\nexport const searchMovie = search => {\n  console.log(search);\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`\n  ).then(response => {\n    return response.json();\n  });\n};\n","import { reviewsMovie } from 'api/Requests';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    reviewsMovie(movieId).then(({ results }) => {\n      setMovie(results);\n    });\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <ul>\n        {movie ? (\n          movie.map(({ author, content, id }) => (\n            <li key={id}>\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["KEY","fetchDataWeek","fetch","then","response","json","fetchMovie","movieId","castMovie","reviewsMovie","searchMovie","search","console","log","useParams","useState","movie","setMovie","useEffect","results","map","author","content","id"],"sourceRoot":""}